{"shell":true,"revision":"8a088a59176794493217780161b1258522b53407","objects":[{"type":null,"source":"lib/sizeable.ex:2","object_type":"ModuleObject","moduledoc":"A library to make file sizes human-readable\n","module":"Elixir.Sizeable","id":"Sizeable"},{"type":"def","source":"lib/sizeable.ex:11","signature":[["value",[],null]],"object_type":"FunctionObject","name":"filesize","module_id":"Sizeable","id":"filesize/1","doc":"see `filesize(value, options)`\n","arity":1},{"type":"def","source":"lib/sizeable.ex:18","signature":[["value",[],null],["options",[],null]],"object_type":"FunctionObject","name":"filesize","module_id":"Sizeable","id":"filesize/2","doc":"Returns a human-readable string for the given numeric value.\n\n## Arguments:\n\n- `value` (Integer/Float/String) representing the filesize to be converted.\n- `options` (Struct) representing the options to determine base, rounding and units.\n\n## Options\n\n- `bits`: `true` if the result should be in bits, `false` if in bytes. Defaults to `false`.\n- `spacer`: the string that should be between the number and the unit. Defaults to `\" \"`.\n- `round`: the precision that the number should be rounded down to. Defaults to `2`.\n- `base`: the base for exponent calculation. `2` for binary-based numbers, any other Integer can be used. Defaults to `2`.\n- `output`: the ouput format to be used, possible options are :string, :list, :map. Defaults to :string.\n\n## Example - Get bit-sized file size for 1024 byte\n\n  Sizeable.filesize(1024, bits: true)\n  \"8 Kb\"\n","arity":2},{"type":"def","source":"lib/sizeable.ex:120","signature":[["output",[],null],["result",[],null],["unit",[],null],["spacer",[],null]],"object_type":"FunctionObject","name":"filesize_output","module_id":"Sizeable","id":"filesize_output/4","doc":null,"arity":4}],"language":"elixir","git_repo_url":"https://github.com/arvidkahl/sizeable","client_version":"0.5.6","client_name":"inch_ex","branch_name":"master","args":[]}